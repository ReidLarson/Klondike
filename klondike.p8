pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- klondike
-- by reid larson
function _init()
	topy=3
	toprsrv=topy+16+3
	tick=0
	hoverc=9
	selectc=14
	ticklimit=8
	
 newgame()
 deselectcards()
 menuitem(1,"new game",newgame)
end

function _update()
 --todo states for main menu, gameplay, game win
	changearea()
 cardsupdate()
 selectedtick()
end

function _draw()
 cls()
 rectfill(0,0,128,128,3)

 drawcells()
 
 drawreserves()
 drawtableaus()
 drawstock()
 drawwaste()
 drawfoundations()
 
 --debug

end

function newgame()
	selectedarea=nil
	hoveredarea="stock"
	hoveredxindex=1
	hoveredyindex=1

	stock={}
	stock.x=2
	stock.y=topy
	stock.cards={}
	waste={}
	waste.x=20
	waste.y=topy
	waste.cards={}
	foundations={}
	for i=1,4 do
	 foundations[i]={}
	 foundations[i].x=62+(i-1)*16
	 foundations.y=topy
	 foundations[i].cards={}
	end
	
	reserves={}
	tableaus={}
	for i=1,7 do
	 local xoff=18
	 reserves[i]={}
	 reserves[i].x=2+(i-1)*xoff
	 reserves[i].y=toprsrv
	 reserves[i].cards={}
	 reserves[i].deallimit=i
	 tableaus[i]={}
	 tableaus[i].x=2+(i-1)*xoff
	 tableaus[i].y=toprsrv
	 tableaus[i].cards={}
	end
	stock.cards=createdeck()
	stock.cards=shuffle(stock.cards)
	dealhand()
end

function dealhand()
 for i=1,#reserves do
  for j=1,#reserves do
  	local rsrv=reserves[j]
  	if #stock.cards>0 then
  	 if i<=rsrv.deallimit then
  	  local card=stock.cards[#stock.cards]
  	  if i==rsrv.deallimit then
  	   add(tableaus[j].cards,card)
  	  elseif i<rsrv.deallimit then
  	   add(reserves[j].cards,card)
  	  end
  	  del(stock.cards,card)
  	 end
  	end
  end
 end
end

--createcard
function createcard(suit,rank)
 local card = {}
 card.suit = suit
 card.rank = rank
 card.isfaceup = false
 card.ishovered = false
 card.isselected = false
 return card
end

--generates a deck of 52 cards
function createdeck()
 local deck={}
	for i=1,4 do
		for j=1,13 do
			add(deck,createcard(i,j))
		end
	end
	return deck
end

--shuffle deck
function shuffle(deck)
 local shuffled = {}
 while(#deck > 0) do
  local card = deck[flr(rnd(#deck))+1]
  add(shuffled,card)
  del(deck,card)
  shuffled[#shuffled].isfaceup = false
 end
 return shuffled
end


-->8
--update
function selectedtick()
	tick += 1
	if (tick > ticklimit) then
		tick = 0
	end
end

function cardsupdate()
-- if hoveredarea~="reserves" and hoveredarea~="waste" then
--  deselectcards()
-- end

 --stock
 for i=1,#stock.cards do
  stock.cards[i].ishovered=false
  stock.cards[i].isselected=false
  stock.cards[i].isfaceup=false
  if hoveredarea=="stock" and i==#stock.cards then
   stock.cards[i].ishovered=true
  end
 end
 
 --waste
 for i=1,#waste.cards do
  waste.cards[i].isfaceup=true
  waste.cards[i].ishovered=false
  if i==#waste.cards then
   if hoveredarea=="waste" then
    waste.cards[i].ishovered=true
   end
  end
 end
 
 --foundations
 for i=1,#foundations do
  for j=1,#foundations[i].cards do
   foundations[i].cards[j].isfaceup=true
   foundations[i].cards[j].ishovered=false
  end
 end
 
 --reserves
 for i=1,#reserves do
  for j=1,#reserves[i].cards do
   reserves[i].cards[j].isfaceup=false
   reserves[i].cards[j].ishovered=i==hoveredxindex and #tableaus[i].cards==0 and j==#reserves[i].cards and hoveredarea=="reserves"
  end
 end
 
 --tableaus
 for i=1,#tableaus do
  for j=1,#tableaus[i].cards do
   tableaus[i].cards[j].isfaceup=true
   tableaus[i].cards[j].ishovered=j>=hoveredyindex and hoveredxindex==i and hoveredarea=="reserves"
  end
 end
end

function selectcards()
 if selectedarea==nil then
	 if hoveredarea=="reserves" then
	  selectedxindex=hoveredxindex
	  selectedyindex=hoveredyindex
	  selectedarea=hoveredarea
	  for i=selectedyindex,#tableaus[selectedxindex].cards do
	   --todo fix error: attempt to index field '?' a nil value
	   tableaus[selectedxindex].cards[i].isselected=true
	  end
	 elseif hoveredarea=="waste" then
	  wastecount=#waste.cards
	  if wastecount>0 then
		  waste.cards[wastecount].isselected=true
		  selectedarea=hoveredarea
	  end
	 end
 end
end

function deselectcards()
 selectedxindex=nil
 selectedyindex=nil
 selectedarea=nil
 for i=1,#tableaus do
  for j=1,#tableaus[i].cards do
   tableaus[i].cards[j].isselected=false
  end
 end
 for card in all(waste.cards) do
  card.isselected=false
 end
end
-->8
--draw
function reflectcard(sprt,x,y)
 spr(sprt,x,y)
 spr(sprt,x+8,y,1,1,true)
 spr(sprt,x,y+8,1,1,false,true)
 spr(sprt,x+8,y+8,1,1,true,true)
end

function drawcells()
	--todo hover state

 palt(0,false)
 palt(15,true)
 local sprcolor=14
 local standardc=6
 local hoverc=14
 local sprindex=15
 
 --stock
 local usecolor = standardc
 if hoveredarea=="stock" then
  pal(sprcolor,hoverc)
 else
  pal(sprcolor,standardc)
 end
 reflectcard(sprindex,stock.x,stock.y)
 
 --waste
 if hoveredarea=="waste" then
  pal(sprcolor,hoverc)
 else
  pal(sprcolor,standardc)
 end
 reflectcard(sprindex,waste.x,waste.y)
 
 --foundations
 pal(sprcolor,standardc)
 for col in all(foundations) do
  reflectcard(sprindex,col.x,foundations.y)
 end
 
 --reserves
 for i=1,#reserves do
  local col=reserves[i]
  if hoveredarea=="reserves" and i==hoveredxindex then
   pal(sprcolor,hoverc)
  else
   pal(sprcolor,standardc)
  end
 	reflectcard(sprindex,col.x,col.y)
 end
 pal()
end

function drawcard(card,x,y,isshadowed)
	palt(0,false)
	palt(15,true)
	if card.isfaceup then
		if isshadowed then
	  pal(14,6)
	  spr(15,x,y-1)
	  spr(15,x+8,y-1,1,1,true)
	  pal()
	  palt(0,false)
	  palt(15,true)
	 end
	
	 --card background
	 reflectcard(14,x,y)
	 spr(21+2*(card.suit-1),x,y+1,2,2)
	 spr(card.rank,x+1,y+1)
	else --just card back
	 spr(46,x,y,2,1)
	 spr(46,x,y+8,2,1,true,true)
	end
	if card.ishovered then
	 reflectcard(15,x,y)
	end
	if card.isselected then
	 if (tick >= ticklimit/2) then
	  pal(14,hoverc)
	 end
	 reflectcard(15,x,y)
	end
 pal()
end

function drawreserves()
 for i=1,#reserves do
  local rsrv=reserves[i]
  for j=1,#rsrv.cards do
   drawcard(rsrv.cards[j],rsrv.x,rsrv.y+(j-1)*2)
  end
 end
end

function drawtableaus()
 for i=1,#tableaus do
  local tbl=tableaus[i]
  for j=1,#tbl.cards do
   local isshadowed=j>1
   drawcard(tbl.cards[j],tbl.x,(#reserves[i].cards*2)+tbl.y+(j-1)*7,isshadowed)
  end
 end
end

function drawstock()
 for card in all(stock.cards) do
  drawcard(card,stock.x,stock.y)
 end
end

function drawwaste()
 for card in all(waste.cards) do
  drawcard(card,waste.x,waste.y)
 end
end

function drawfoundations()
	for i=1,#foundations do
	 for j=1,#foundations[i].cards do
	  drawcard(foundations[i].cards[j],foundations[i].x,foundations.y)
	 end
	end
end
-->8
--interaction
function changearea()
 if btnp(❎) and selectedarea~=nil then
  deselectcards()
	elseif hoveredarea=="stock" then
	 stock_input()
	elseif hoveredarea=="waste" then
	 waste_input();
	elseif hoveredarea=="reserves" then
	 reserves_input()
	end
end

function stock_input()
	if btnp(➡️) or btnp(⬅️) then
 	hoveredarea="waste"
 elseif btnp(⬇️) then
  enterreserves()
 elseif btnp(🅾️) then
  deselectcards()
  flipstock()
 end
end

function waste_input()
	if btnp(⬅️) or btnp(➡️) then
  hoveredarea="stock"
 elseif btnp(⬇️) then
  enterreserves()
 elseif btnp(🅾️) then
  if selectedarea=="waste" then
   deselectcards()
  else
   selectcards()
  end
 elseif btnp(❎) then
  checkmovetofoundation(true)
 end
end

function reserves_input()
	if btnp(⬆️) then
	 if #tableaus[hoveredxindex].cards==0 or hoveredyindex==1 then
	  --todo store whether to go to stock or waste
	  exitreserve(hoveredxindex)
	 	hoveredarea="stock"
	 else
	  hoveredyindex-=1
	 end
	elseif btnp(⬇️) then
	 local cardcount=#tableaus[hoveredxindex].cards
	 if cardcount>0 and cardcount~=hoveredyindex then
		 hoveredyindex+=1
	 end
	 deselectcards()
	elseif btnp(➡️) or btnp(⬅️) then
	 switch_reserve()
 elseif btnp(🅾️) then
  reserves_move()
	elseif btnp(❎) then
 	checkmovetofoundation()
 end
end

function switch_reserve()
	--todo while selection~=nil, check if new xindex has a tableau, skip if it doesn't
 if btnp(➡️) then
 	newxindex=hoveredxindex+1
 	if newxindex>#tableaus then newxindex=1 end
 else
  newxindex=hoveredxindex-1
  if newxindex<1 then newxindex=#tableaus end
 end
 exitreserve(hoveredxindex)
 hoveredxindex=newxindex
 enterreserves()
end


function enterreserves()
 hoveredarea="reserves"
 local x=hoveredxindex
 if #tableaus[x].cards>0 then
  hoveredyindex=1
  --tableaus[x].cards[hoveredyindex].ishovered=true
 elseif #reserves[x].cards>0 then
  hoveredyindex=#reserves[x].cards
  reserves[x].cards[hoveredyindex].ishovered=true
 end
end

function exitreserve(xindex)
 for i=1,#reserves[xindex].cards do
  reserves[xindex].cards[i].ishovered=false
 end
 for i=1,#tableaus[xindex].cards do
  --tableaus[xindex].cards[i].ishovered=false
 end
end
-->8
--move cards
function reserves_move()
	local tableaucount=#tableaus[hoveredxindex].cards
 local reservecount=#reserves[hoveredxindex].cards
 if selectedarea=="waste" then
  checkmovetableau()
 else
  if tableaucount>0 or (reservecount==0 and tableaucount==0) then
	  if selectedxindex==hoveredxindex then
	   deselectcards()
	  elseif selectedarea==nil then
	   selectcards()
	  else
	   checkmovetableau()
	  end
	 elseif selectedxindex==nil then
	  flipreserve()
	 end  
 end
end

function checkmovetofoundation(iswaste)
 local cardsuit=nil 
 local cardrank=nil
 local continuecheck=false
 if iswaste then
  local wastecount=#waste.cards
  if wastecount>0 then
	  cardsuit=waste.cards[wastecount].suit
	  cardrank=waste.cards[wastecount].rank
	  continuecheck=true
  end
 else
	 local tableau=tableaus[hoveredxindex]
	 local cardcount=#tableau.cards
	 if cardcount>0 then
	  cardsuit = tableau.cards[cardcount].suit
	  cardrank = tableau.cards[cardcount].rank
	  continuecheck=true
	 end
 end
 if continuecheck then
	 local foundation = foundations[cardsuit]
  local foundationcount = #foundation.cards
  local foundationrank=0
  if foundationcount>0 then
   foundationrank=foundation.cards[foundationcount].rank
  end
  if cardrank==foundationrank+1 then
   movetofoundation(iswaste)
  end
 end
end

function movetofoundation(iswaste)
 local card=nil
 if iswaste then
  card=waste.cards[#waste.cards]
 else
  card=tableaus[hoveredxindex].cards[#tableaus[hoveredxindex].cards]
 end
 add(foundations[card.suit].cards,card)
 if iswaste then
  del(waste.cards,card)
 else
  del(tableaus[hoveredxindex].cards,card)
  local count=#tableaus[hoveredxindex].cards
  if hoveredyindex>count then
   hoveredyindex=count
  end
 end
end

function flipstock()
 local stockcount=#stock.cards
 if stockcount>0 then
	 local card=stock.cards[stockcount]
	 debugcard=card
	 add(waste.cards,card)
	 del(stock.cards,card)
	else
	 for i=#waste.cards,1,-1 do
	  add(stock.cards,waste.cards[i])
	 end
	 while #waste.cards>0 do
	  del(waste.cards,waste.cards[1])
	 end
 end
end

function flipreserve()
 local reserve=reserves[hoveredxindex]
 local card=reserve.cards[#reserve.cards]
 add(tableaus[hoveredxindex].cards,card)
 del(reserves[hoveredxindex].cards,card)
 hoveredyindex=1
end

function checkmovetableau()
 if hoveredarea=="reserves" and selectedarea~=nil then
  local dothemove=false
  
  --get selected card
  local selectedcard=nil
  if selectedarea=="reserves" then
   selectedcard=tableaus[selectedxindex].cards[selectedyindex]
  elseif selectedarea=="waste" then
   selectedcard=waste.cards[#waste.cards]
  end
  
  --get hovered card
  local tableaucount=#tableaus[hoveredxindex].cards
  local reservecount=#reserves[hoveredxindex].cards
  if tableaucount==0 and reservecount==0 and selectedcard.rank==13 then
   --empty reserve, move king
			dothemove=true
  elseif tableaucount>0 then
   local hoveredcard=tableaus[hoveredxindex].cards[tableaucount]
   dothemove=comparetableaucards(hoveredcard,selectedcard)
  end
  
  if dothemove then
   --do the move
   if selectedarea=="reserves" then
    movetableau()
   elseif selectedarea=="waste" then
    movewastetotableau()
   end
  else
   --don't do the move
   --todo bad sfx
  end
  
 end
end

function comparetableaucards(highcard,lowcard)
 -- this has had a bug where lowcard is a nil value. could check for it here but that wouldn't fix the source of the bug.
 return highcard.suit%2~=lowcard.suit%2 and highcard.rank-1==lowcard.rank
end

function movewastetotableau()
 local card=waste.cards[#waste.cards]
 add(tableaus[hoveredxindex].cards,card)
 del(waste.cards,card)
 deselectcards()
 
 --todo for some reason can't move back up to stock after doing this without switching rerserves first
 --attempt to fix above bug
 hoveredyindex=1
end

function movetableau()
 for i=selectedyindex,#tableaus[selectedxindex].cards do
	 add(tableaus[hoveredxindex].cards,tableaus[selectedxindex].cards[i])
	end
 local i=selectedyindex
 while i<=#tableaus[selectedxindex].cards do
  del(tableaus[selectedxindex].cards,tableaus[selectedxindex].cards[i])
 end
 deselectcards()
 --todo play sfx?
end
__gfx__
00000000ffcccccfffcccccfffcccccfffffcccffcccccccffcccccffcccccccffcccccfffcccccffccccccffcccccccffcccccffcccfcccfff77777fffeeeee
00000000fcc777ccfcc777ccfcc777ccfffcc7cffc77777cfcc777cffc77777cfcc777ccfcc777cccc7cc7ccfc77777cfcc777ccfc7ccc7cff777777ffefffff
00700700fc7ccc7cfc7ccc7cfc7ccc7cffcc77cffc7cccccfc7ccccffcccc7ccfc7ccc7cfc7ccc7cc77c7c7cfcccc7ccfc7ccc7cfc7cc7ccf7777777feffffff
00077000fc7ccc7cfcccc7ccfcccc7ccfcc7c7ccfcc777ccfc7777ccffcc7ccffcc777ccfc7ccc7ccc7c7c7cffffc7cffc7ccc7cfc7cc7cff7777777feffffff
00077000fc77777cffcc7ccffccccc7cfc77777cfccccc7cfc7ccc7cffc777cffc7ccc7cfcc7777cfc7c7c7cfcccc7cffc7c7c7cfc777ccff7777777feffffff
00700700fc7ccc7cfcc7ccccfc7ccc7cfcccc7ccfc7ccc7cfc7ccc7cffcc7ccffc7ccc7cffcccc7cfc7c7c7cfc7cc7cffc7cc7ccfc7cc7ccf7777777feffffff
00000000fc7cfc7cfc77777cfcc777ccffffc7cffcc777ccfcc777ccfffc7cfffcc777ccffc777ccfc7cc7ccfcc77ccffcc77c7cfc7ccc7cf7777777feffffff
00000000fcccfcccfcccccccffcccccfffffcccfffcccccfffcccccffffcccffffcccccfffcccccffccccccfffccccffffccccccfcccfcccf7777777feffffff
0000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000
0000000000000000000000000000000000000000fffffffffff8fffffffffffffff0ffffffffffffff8f8ffffffffffffff0ffff000000000000000000000000
0000000000000000000000000000000000000000ffffffffff888ffffffffffffffffffffffffffffff8ffffffffffffff000fff000000000000000000000000
0000000000000000000000000000000000000000fffffffffff8ffffffffffffff0f0fffffffffffffffffffffffffffffffffff000000000000000000000000
0000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000
0000000000000000000000000000000000000000fffffffff8fffffffffffffff0fffffffffffff8fff8fffffffffffff0ffffff000000000000000000000000
0000000000000000000000000000000000000000ffffffff888fffffffffffff000fffffffffff888f888fffffffffff000fffff000000000000000000000000
0000000000000000000000000000000000000000fffffff88888ffffffffffff000ffffffffff888888e88fffffffff00000ffff000000000000000000000000
0000000000000000000000000000000000000000ffffff8888888fffffffff00f0f00ffffffff8888888e8ffffffff0000000fff00000000fff11c111c111fff
0000000000000000000000000000000000000000fffff888888888fffffff000000000fffffff888888888fffffff000000000ff00000000ff11c111c111c1ff
0000000000000000000000000000000000000000ffffff8888888fffffffff00f0f00fffffffff8888888fffffffff0000000fff00000000f11c111c111c111f
0000000000000000000000000000000000000000fffffff88888fffffffffffff0fffffffffffff88888fffffffffffff0ffffff00000000f1c111c111c111cf
0000000000000000000000000000000000000000ffffffff888fffffffffffff000fffffffffffff888fffffffffffff000fffff00000000fc111c111c111c1f
0000000000000000000000000000000000000000fffffffff8fffffffffffff00000fffffffffffff8fffffffffffff00000ffff00000000f111c111c111c11f
0000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000f11c111c111c111f
0000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000f1c111c111c111cf
__label__
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333eeeeeeeeee33333333777777777733333333333333333333333333333333666666666633333366666666663333337777777777333333666666666633333
3333e1c111c111ce3333337ccccc777777333333333333333333333333333333633333333336333363333333333633337ccccc77777733336333333333363333
333e1c111c111c11e33337cc777cc7707773333333333333333333333333333633333333333363363333333333336337cc777cc7878773363333333333336333
333ec111c111c111e33337c7ccc7c7000773333333333333333333333333333633333333333363363333333333336337c7ccc7c7787773363333333333336333
333e111c111c111ce33337c7ccc7c7777773333333333333333333333333333633333333333363363333333333336337c7ccc7c7777773363333333333336333
333e11c111c111c1e33337cc7777c7777773333333333333333333333333333633333333333363363333333333336337c77777c7777773363333333333336333
333e1c111c111c11e333377cccc7c0777773333333333333333333333333333633333333333363363333333333336337c7ccc7c7787773363333333333336333
333ec111c111c111e333377c777cc0077773333333333333333333333333333633333333333363363333333333336337c7c7c7c7888773363333333333336333
333e111c111c111ce333377ccccc00007773333333333333333333333333333633333333333363363333333333336337ccc8ccc88e8873363333333333336333
333e11c111c111c1e33337777700000007733333333333333333333333333336333333333333633633333333333363377778888888e873363333333333336333
333e1c111c111c11e333377770000000007333333333333333333333333333363333333333336336333333333333633777788888888873363333333333336333
333ec111c111c111e333377777000000077333333333333333333333333333363333333333336336333333333333633777778888888773363333333333336333
333e111c111c111ce333377777777077777333333333333333333333333333363333333333336336333333333333633777777888887773363333333333336333
333e11c111c111c1e333377777770007777333333333333333333333333333363333333333336336333333333333633777777788877773363333333333336333
3333ec111c111c1e3333337777700000773333333333333333333333333333336333333333363333633333333336333377777778777733336333333333363333
33333eeeeeeeeee33333333777777777733333333333333333333333333333333666666666633333366666666663333337777777777333333666666666633333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
3333377777777773333333377777777773333333311c111c1113333333311c111c1113333333311c111c1113333333311c111c1113333333311c111c11133333
3333ccc7ccc777773333337ccccc77777733333311c111c111c133333311c111c111c133333311c111c111c133333311c111c111c133333311c111c111c13333
3337c7ccc7c77077733337cc777cc78787733331111c111c1111133331111c111c1111133331111c111c1111133331111c111c1111133331111c111c11111333
3337c7cc7cc70007733337c7ccc7c7787773333111c111c111c1c3333111c111c111c1c3333111c111c111c1c3333111c111c111c1c3333111c111c111c1c333
3337c7cc7c777777733337c7ccc7c77777733331177777777771133331111c111c1111133331177777777771133331111c111c1111133331111c111c11111333
3337c777cc777777733337c7c7c7c777777333317ccccc777777c3333111c111c111c1c333317ccccc777777c3333111c111c111c1c3333111c111c111c1c333
3337c66666666667733337c66666666667733337cc777cc77077733331177777777771133337cc777cc77877733331111c111c1111133331111c111c11111333
3337677777777776733337677777777776733337c7ccc7c777777333317ccccc777777c33337c7ccc7c7888773333111c111c111c1c3333111c111c111c1c333
33367ccccc777777633336ccccccc77777633337cccc7cc70707733337cc777cc77877733337cccc7cc77877733331111c111c11111333311777777777711333
3337cc777cc77877733337c77777c77077733337ccccc7c77777733337c7ccc7c788877333377cc7cc77777773333111c111c111c1c33331ccccccc77777c333
3337c7ccc7c78887733337cccc7cc77777733337c7ccc7c07777733337c7ccc7c77877733337cc7cccc87777733331177777777771133337c77777c770777333
3337c7ccc7c77877733337777c7c770707733337cc777cc00777733337cc7777c77777733337c77777c887777333317ccccc777777c33337c7ccccc777777333
3337c7c7c7c77777733337cccc7c7777777333377ccccc000777733337766666666667733337ccccccc88877733337cc777cc77077733337cc777cc707077333
3337c7cc7cc87777733337c66666666667733337777700707007733337677777777776733337777788888887733337c7ccc7c70007733337ccccc7c777777333
3337cc77c7c887777333376777777777767333377770000000007333367ccccc777777633337777888888888733337c7ccc7c77777733337c666666666677333
33377cccccc88877733336cccccc777777633337777700707007733337cc777cc77077733337777788888887733337c7c7c7c777777333376777777777767333
333777778888888773333cc7cc7cc78787733337777777707777733337c7ccc7c70007733337777778888877733337c66666666667733336777ccc7777776333
333777788888888873333c77c7c7c77877733337777777000777733337cc777cc7777773333777777788877773333767777777777673333777cc7c7787877333
333777778888888773333cc7c7c7c77777733333777770000077333337c7ccc7c77777733333777777787777333336ccccccc777776333377cc77c7778777333
3337777778888877733337c7c7c7c77777733333377777777773333337c66666666667733333377777777773333337c77777c77877733337cc7c7cc777777333
3337777777888777733337c66666666667733333333333333333333337677777777776733333333333333333333337cccc7cc78887733337c77777c777777333
3333777777787777333337677777777776733333333333333333333336ccccccc77777633333333333333333333337777c7c777877733337cccc7cc778777333
33333777777777733333367ccccc777777633333333333333333333337c77777c77877733333333333333333333337cccc7c777777733337777c7c8788877333
3333333333333333333337cc777cc77077733333333333333333333337cccc7cc78887733333333333333333333337c7cc7c787777733337777ccc888e887333
3333333333333333333337c7ccc7c777777333333333333333333333377cc7cc777877733333333333333333333337cc77cc8887777333377778888888e87333
3333333333333333333337c7ccc7c707077333333333333333333333377c777c7777777333333333333333333333377cccc88888777333377778888888887333
3333333333333333333337cc7777c777777333333333333333333333377666666666677333333333333333333333377777888888877333377777888888877333
33333333333333333333377666666666677333333333333333333333376777777777767333333333333333333333377778888888887333377777788888777333
33333333333333333333376777777777767333333333333333333333367ccccc7777776333333333333333333333377777888888877333377777778887777333
33333333333333333333367ccccc777777633333333333333333333337cc777c7770777333333333333333333333377777788888777333337777777877773333
3333333333333333333337cc777cc77877733333333333333333333337c7cccc7777777333333333333333333333377777778887777333333777777777733333
3333333333333333333337c7ccc7c78887733333333333333333333337c7777cc707077333333333333333333333337777777877773333333333333333333333
3333333333333333333337cc777cc77877733333333333333333333337c7ccc7c777777333333333333333333333333777777777733333333333333333333333
3333333333333333333337c7ccc7c77777733333333333333333333337c7ccc7c077777333333333333333333333333333333333333333333333333333333333
3333333333333333333337c66666666667733333333333333333333337cc777cc007777333333333333333333333333333333333333333333333333333333333
33333333333333333333376777777777767333333333333333333333377ccccc0007777333333333333333333333333333333333333333333333333333333333
3333333333333333333336ccccccc777776333333333333333333333377777007070077333333333333333333333333333333333333333333333333333333333
3333333333333333333337c77777c770777333333333333333333333377770000000007333333333333333333333333333333333333333333333333333333333
3333333333333333333337cccc7cc777777333333333333333333333377777007070077333333333333333333333333333333333333333333333333333333333
33333333333333333333377cc7cc7707077333333333333333333333377777777077777333333333333333333333333333333333333333333333333333333333
33333333333333333333377c777c7777777333333333333333333333377777770007777333333333333333333333333333333333333333333333333333333333
33333333333333333333377cc7cc7077777333333333333333333333337777700000773333333333333333333333333333333333333333333333333333333333
333333333333333333333777c7c70007777333333333333333333333333777777777733333333333333333333333333333333333333333333333333333333333
333333333333333333333777ccc70007777333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333377777007070077333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333377770000000007333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333377777007070077333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333377777777077777333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333377777770007777333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333337777700000773333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333777777777733333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333

__sfx__
00010000180000c000240002a050000000000029050000002a0502a0502a0502a0502a0502a05029050290502905029050290502a0502b0502b0502b0502b0502b05000000000000000000000000000000000000
